// Copyright (C) NeoAxis Group Ltd. This is part of NeoAxis 3D Engine SDK.
compositor SSAO
{
	technique
	{
		//source scene for opaque objects
		//texture format will changed from the code. for HDR rendering use PF_FLOAT16_RGB.
		texture rt_scene target_width target_height PF_R8G8B8

		//texture size will calculated from the code.
		texture rt_depth 1 1 PF_FLOAT32_R
		texture rt_occlusion 1 1 PF_R8G8B8

		//generate blur texture
		texture rt_blurHorizontal target_width target_height PF_R8G8B8
		texture rt_blurVertical target_width target_height PF_R8G8B8

		//final texture
		//texture format will changed from the code. for HDR rendering use PF_FLOAT16_RGB.
		texture rt_final target_width target_height PF_R8G8B8

		//draw scene with opacity objects only
		target rt_scene
		{
			// No input, render differently
			input none

			pass clear
			{
			}

			//draw opacity objects
			pass render_scene
			{
				first_render_queue 0
				last_render_queue 95
			}
		}

		target rt_depth
		{
			input none
			pass render_quad
			{
				material Compositor/SSAO/DepthDownsample1x1
				//input 0 - depth buffer
				identifier 100
			}
		}

		target rt_depth
		{
			input none
			pass render_quad
			{
				material Compositor/SSAO/DepthDownsample2x2
				//input 0 - depth buffer
				identifier 101
			}
		}

		target rt_depth
		{
			input none
			pass render_quad
			{
				material Compositor/SSAO/DepthDownsample3x3
				//input 0 - depth buffer
				identifier 102
			}
		}

		target rt_occlusion
		{
			input none
			pass render_quad
			{
				material Compositor/SSAO/Occlusion
				input 0 rt_depth
				identifier 200
			}
		}

		target rt_blurHorizontal
		{
			input none
			pass render_quad
			{
				// Horizontal blur
				material Compositor/SSAO/Blur
				input 0 rt_occlusion
				//input 1 - depth buffer
				identifier 300
			}
		}

		target rt_blurVertical
		{
			input none
			pass render_quad
			{
				// Vertical blur
				material Compositor/SSAO/Blur
				input 0 rt_blurHorizontal
				//input 1 - depth buffer
				identifier 400
			}
		}

		target rt_final
		{
			input none

			pass render_quad
			{
				material Compositor/SSAO/Final
				input 0 rt_scene
				input 1 rt_blurVertical
				identifier 500
			}

			//!!!!!!TODO: twice getting list of visible objects.
			//draw transparent objects
			pass render_scene
			{
				first_render_queue 96
				last_render_queue 100
			}
		}

		target_output
		{
			input none
			pass render_quad
			{
				material Compositor/SSAO/Copy
				input 0 rt_final
			}
		}
	}
}
